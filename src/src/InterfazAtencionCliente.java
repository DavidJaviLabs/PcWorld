package src;

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.*;
import javax.swing.*;
import javax.swing.border.LineBorder;

/**
 *
 * @author David
 */
public class InterfazAtencionCliente extends javax.swing.JFrame {

    /**
     * Creates new form InterfazAtencionCliente
     */
    public InterfazAtencionCliente() {
        initComponents();
        panelChat = new JPanel(new GridLayout(0, 2, 20, 10));
        mostrarChat(InterfazPrincipal.getInstancia().botonCuenta.getText());
        setVisible(true);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Define la función que se ejecutará al cerrar el JFrame
                if(InterfazPrincipal.getInstancia().botonCuenta.getText().equals("Admin"))
                {
                    new InterfazElegirChat();
                }
            }
        });
    }
    
    public static InterfazAtencionCliente getInstancia()
    {
        if(instancia == null)
        {
            instancia = new InterfazAtencionCliente();
        }
        return instancia;
    }
    
    public static InterfazAtencionCliente crearNuevaInstancia() 
    {
        instancia = null;
        return getInstancia();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelEscribir = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaEscribirTexto = new javax.swing.JTextArea();
        labelEnviar = new javax.swing.JLabel();
        panelCuerpo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        abcd = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panelEscribir.setBackground(new java.awt.Color(70, 123, 69));
        panelEscribir.setPreferredSize(new java.awt.Dimension(500, 120));

        textAreaEscribirTexto.setColumns(20);
        textAreaEscribirTexto.setLineWrap(true);
        textAreaEscribirTexto.setRows(5);
        textAreaEscribirTexto.setWrapStyleWord(true);
        textAreaEscribirTexto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textAreaEscribirTextoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(textAreaEscribirTexto);

        labelEnviar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelEnviar.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "enviar.png"));
        labelEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelEnviarMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                labelEnviarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                labelEnviarMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panelEscribirLayout = new javax.swing.GroupLayout(panelEscribir);
        panelEscribir.setLayout(panelEscribirLayout);
        panelEscribirLayout.setHorizontalGroup(
            panelEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEscribirLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(labelEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelEscribirLayout.setVerticalGroup(
            panelEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEscribirLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(panelEscribirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(labelEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setToolTipText("");
        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setMinimumSize(new java.awt.Dimension(500, 480));

        abcd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout abcdLayout = new javax.swing.GroupLayout(abcd);
        abcd.setLayout(abcdLayout);
        abcdLayout.setHorizontalGroup(
            abcdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 497, Short.MAX_VALUE)
        );
        abcdLayout.setVerticalGroup(
            abcdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(abcd);

        javax.swing.GroupLayout panelCuerpoLayout = new javax.swing.GroupLayout(panelCuerpo);
        panelCuerpo.setLayout(panelCuerpoLayout);
        panelCuerpoLayout.setHorizontalGroup(
            panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelCuerpoLayout.setVerticalGroup(
            panelCuerpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelEscribir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(panelCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addComponent(panelCuerpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(panelEscribir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void labelEnviarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelEnviarMousePressed
        labelEnviar.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "enviarRelleno.png"));
    }//GEN-LAST:event_labelEnviarMousePressed

    private void labelEnviarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelEnviarMouseReleased
        labelEnviar.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "enviar.png"));
    }//GEN-LAST:event_labelEnviarMouseReleased

    private void labelEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelEnviarMouseClicked
        if(!textAreaEscribirTexto.getText().equals(""))
        {
            enviar();
        }
    }//GEN-LAST:event_labelEnviarMouseClicked

    private void textAreaEscribirTextoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textAreaEscribirTextoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if(textAreaEscribirTexto.getText().equals(""))
            {
                evt.consume();
            }
            else
            {
                enviar();
                evt.consume();
            }
        } else
        {
            return;
        }
    }//GEN-LAST:event_textAreaEscribirTextoKeyPressed

    private void enviar()
    {
        if(!textAreaEscribirTexto.getText().equals(""))
        {
            try {
                // Establecer la conexión a la base de datos
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcworld", "pcworld", "pcworld2024");
                Date fechaActual = new Date();

                // Formatear la fecha y hora en el formato adecuado para MySQL
                SimpleDateFormat formatoFechaHora = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String fechaHoraFormateada = formatoFechaHora.format(fechaActual);
                // Verificar si el correo electrónico ya existe en la tabla
                String queryAtencionCliente = "INSERT INTO atencion_cliente (Usuario, Destino, Mensaje, Fecha) VALUES (?, ?, ?, ?)";
                PreparedStatement pstmtAtencionCliente = cn.prepareStatement(queryAtencionCliente);
                if(InterfazPrincipal.getInstancia().botonCuenta.getText().equals("Admin"))
                {
                    pstmtAtencionCliente.setString(1, "Admin");
                    pstmtAtencionCliente.setString(2, nombreUsuario);
                }else
                {
                    pstmtAtencionCliente.setString(1, InterfazPrincipal.getInstancia().botonCuenta.getText());
                    pstmtAtencionCliente.setString(2, "Admin");
                }
                
                pstmtAtencionCliente.setString(3, textAreaEscribirTexto.getText());
                pstmtAtencionCliente.setString(4, fechaHoraFormateada);
                pstmtAtencionCliente.executeUpdate();
                textAreaEscribirTexto.setText("");
                
                mostrarChat(InterfazPrincipal.getInstancia().botonCuenta.getText());
                
                cn.close();
            } catch(Exception e) {
                System.out.println("Error: " + e);
            }
        }
    }
    
    public void mostrarChat(String nombre) 
    {
        panelChat = null;
        panelChat = new JPanel(new GridLayout(0, 2, 20, 10));
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcworld", "pcworld", "pcworld2024");
            String query = "SELECT Usuario, Mensaje, Fecha FROM atencion_cliente WHERE Usuario = ? OR Destino = ?";
            PreparedStatement pstmt = cn.prepareStatement(query);
            if(InterfazPrincipal.getInstancia().botonCuenta.getText().equals("Admin"))
            {
                pstmt.setString(1, nombreUsuario);
                pstmt.setString(2, nombreUsuario);
            }else
            {
                pstmt.setString(1, nombre);
                pstmt.setString(2, nombre);
            }

            
            ResultSet rs = pstmt.executeQuery();

            
            ArrayList<AtencionCliente> lista = new ArrayList<>();
            while (rs.next()) {
                // Crear una nueva instancia de AtencionCliente por cada fila en el resultado
                AtencionCliente atencionCliente = new AtencionCliente(
                    rs.getString("Usuario"),
                    rs.getString("Mensaje"),
                    rs.getString("Fecha")
                );
                lista.add(atencionCliente);
            }

            // Ordenar la lista por fecha
            Collections.sort(lista, (a, b) -> a.getFecha().compareTo(b.getFecha()));
            
            for(int i = 0; i < lista.size(); i++)
            {
                JTextArea textAreaMensaje = new JTextArea();
                textAreaMensaje.setEditable(false);
                textAreaMensaje.setFocusable(false);
                
                textAreaMensaje.setBorder(new LineBorder(Color.BLACK, 2));
                textAreaMensaje.setFont(new Font("Arial", Font.PLAIN, 12));
                
                textAreaMensaje.setForeground(Color.BLACK);
                textAreaMensaje.setLineWrap(true); 
                textAreaMensaje.setWrapStyleWord(true);
                textAreaMensaje.setText(lista.get(i).getMensaje());
                
                // Calcula el ancho deseado basado en el contenido del mensaje
                FontMetrics metrics = textAreaMensaje.getFontMetrics(textAreaMensaje.getFont());
                int anchoDeseado = SwingUtilities.computeStringWidth(metrics, lista.get(i).getMensaje());
                int altoDeseado = metrics.getHeight() * (lista.get(i).getMensaje().length() / anchoDeseado + 1);

                // Si el ancho deseado supera el límite máximo, ajusta el ancho y el alto
                if (anchoDeseado > 196) {
                    int lineas = (anchoDeseado / 196) + 1; // Número de líneas necesarias
                    anchoDeseado = 196; // Límite máximo de ancho
                    altoDeseado *= lineas; // Ajuste del alto para múltiples líneas
                }

                textAreaMensaje.setPreferredSize(new Dimension(anchoDeseado, altoDeseado));


                
                JTextArea textAreaMensaje2 = new JTextArea();
                textAreaMensaje2.setVisible(false);
                textAreaMensaje2.setEditable(false);
                textAreaMensaje2.setFocusable(false);
                textAreaMensaje2.setSize(textAreaMensaje.getSize());
                if(InterfazPrincipal.getInstancia().botonCuenta.getText().equals("Admin"))
                {
                    if(!lista.get(i).getUsuario().equals("Admin"))
                    {
                        textAreaMensaje.setBackground(Color.WHITE);
                        panelChat.add(textAreaMensaje);
                        panelChat.add(textAreaMensaje2);
                    }else
                    {
                        textAreaMensaje.setBackground(new Color(231,255,221,255));
                        panelChat.add(textAreaMensaje2);
                        panelChat.add(textAreaMensaje);
                    }
                }else
                {
                    if(lista.get(i).getUsuario().equals("Admin"))
                    {
                        textAreaMensaje.setBackground(Color.WHITE);
                        panelChat.add(textAreaMensaje);
                        panelChat.add(textAreaMensaje2);
                    }else
                    {
                        textAreaMensaje.setBackground(new Color(231,255,221,255));
                        panelChat.add(textAreaMensaje2);
                        panelChat.add(textAreaMensaje);
                    }
                }
                
            }
            panelChat.revalidate();
            panelChat.repaint();
            rs.close();
            pstmt.close();
            cn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        jScrollPane2.setViewportView(panelChat);
        // Establecer la posición de la vista en la parte inferior
        SwingUtilities.invokeLater(() -> {
            jScrollPane2.getVerticalScrollBar().setValue(Math.max(0, 2147483647));
        });
    }
    
    public class AtencionCliente
    {
        private String usuario, mensaje, fecha;

        public AtencionCliente(String usuario, String mensaje, String fecha) {
            this.usuario = usuario;
            this.mensaje = mensaje;
            this.fecha = fecha;
        }

        // Getters
        public String getUsuario() {
            return usuario;
        }

        public String getMensaje() {
            return mensaje;
        }

        public String getFecha() {
            return fecha;
        }

        public void setUsuario(String usuario) {
            this.usuario = usuario;
        }

        public void setMensaje(String mensaje) {
            this.mensaje = mensaje;
        }

        public void setFecha(String fecha) {
            this.fecha = fecha;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel abcd;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelEnviar;
    private javax.swing.JPanel panelCuerpo;
    private javax.swing.JPanel panelEscribir;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextArea textAreaEscribirTexto;
    // End of variables declaration//GEN-END:variables
    private JPanel panelChat;
    public String nombreUsuario;
    private static InterfazAtencionCliente instancia;
}
