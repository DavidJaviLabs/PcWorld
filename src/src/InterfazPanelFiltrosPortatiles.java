package src;

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.*;



public class InterfazPanelFiltrosPortatiles extends javax.swing.JFrame 
{
    /**
     * Creates new form pruebaPanelFiltros
     */
    public InterfazPanelFiltrosPortatiles() 
    {
        initComponents();
    }
    
    public static InterfazPanelFiltrosPortatiles getInstancia()
    {
        if(instancia == null)
        {
            instancia = new InterfazPanelFiltrosPortatiles();
        }
        return instancia;
    }
    public static InterfazPanelFiltrosPortatiles crearNuevaInstancia() 
    {
        instancia = null;
        return getInstancia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        checkAcer = new javax.swing.JCheckBox();
        checkAlurin = new javax.swing.JCheckBox();
        checkMsi = new javax.swing.JCheckBox();
        checkAsus = new javax.swing.JCheckBox();
        checkRazer = new javax.swing.JCheckBox();
        checkDell = new javax.swing.JCheckBox();
        checkLenovo = new javax.swing.JCheckBox();
        logoAcer = new javax.swing.JLabel();
        logoAlurin = new javax.swing.JLabel();
        logoAsus = new javax.swing.JLabel();
        logoDell = new javax.swing.JLabel();
        logoLenovo = new javax.swing.JLabel();
        logoMsi = new javax.swing.JLabel();
        logoRazer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(247, 224, 136));

        checkAcer.setBackground(new java.awt.Color(247, 224, 136));
        checkAcer.setText("ACER");
        checkAcer.setFocusable(false);
        checkAcer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
        checkAcer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkAcerItemStateChanged(evt);
            }
        });

        checkAlurin.setBackground(new java.awt.Color(247, 224, 136));
        checkAlurin.setText("ALURIN");
        checkAlurin.setFocusable(false);
        checkAlurin.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
        checkAlurin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkAlurinItemStateChanged(evt);
            }
        });

        checkMsi.setBackground(new java.awt.Color(247, 224, 136));
        checkMsi.setText("MSI");
        checkMsi.setFocusable(false);
        checkMsi.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
        checkMsi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkMsiItemStateChanged(evt);
            }
        });

        checkAsus.setBackground(new java.awt.Color(247, 224, 136));
        checkAsus.setText("ASUS");
        checkAsus.setFocusable(false);
        checkAsus.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
        checkAsus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkAsusItemStateChanged(evt);
            }
        });

        checkRazer.setBackground(new java.awt.Color(247, 224, 136));
        checkRazer.setText("RAZER");
        checkRazer.setFocusable(false);
        checkRazer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
        checkRazer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkRazerItemStateChanged(evt);
            }
        });

        checkDell.setBackground(new java.awt.Color(247, 224, 136));
        checkDell.setText("DELL");
        checkDell.setFocusable(false);
        checkDell.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
        checkDell.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkDellItemStateChanged(evt);
            }
        });

        checkLenovo.setBackground(new java.awt.Color(247, 224, 136));
        checkLenovo.setText("LENOVO");
        checkLenovo.setFocusable(false);
        checkLenovo.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
        checkLenovo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkLenovoItemStateChanged(evt);
            }
        });

        logoAcer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logoAcer.png"));
        logoAcer.setText(" ");
        logoAcer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoAcerMouseClicked(evt);
            }
        });

        logoAlurin.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logoAlurin.png"));
        logoAlurin.setText(" ");
        logoAlurin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoAlurinMouseClicked(evt);
            }
        });

        logoAsus.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logoAsus.png"));
        logoAsus.setText(" ");
        logoAsus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoAsusMouseClicked(evt);
            }
        });

        logoDell.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logoDell.png"));
        logoDell.setText(" ");
        logoDell.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoDellMouseClicked(evt);
            }
        });

        logoLenovo.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logoLenovo.png"));
        logoLenovo.setText(" ");
        logoLenovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoLenovoMouseClicked(evt);
            }
        });

        logoMsi.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logoMsi.png"));
        logoMsi.setText(" ");
        logoMsi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoMsiMouseClicked(evt);
            }
        });

        logoRazer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logoRazer.png"));
        logoRazer.setText(" ");
        logoRazer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoRazerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(checkAcer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoAcer))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(checkAlurin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoAlurin))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(checkDell, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoDell))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(checkLenovo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoLenovo)))
                        .addGap(71, 161, Short.MAX_VALUE))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(checkAsus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoAsus))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(checkMsi, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoMsi))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(checkRazer, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logoRazer)))
                        .addGap(0, 161, Short.MAX_VALUE))))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkAcer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoAcer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkAlurin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoAlurin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkAsus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoAsus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkDell, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoDell))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkLenovo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoLenovo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkMsi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoMsi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkRazer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logoRazer))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkAlurinItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkAlurinItemStateChanged
        if (checkAlurin.isSelected()) 
        {
            checkAlurin.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "check.png"));
            buscarFiltros();            
        } else 
        {
            checkAlurin.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
            buscarFiltros();
        }
    }//GEN-LAST:event_checkAlurinItemStateChanged

    private void checkAsusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkAsusItemStateChanged
        if (checkAsus.isSelected()) 
        {
            checkAsus.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "check.png"));
            buscarFiltros();
        } else 
        {
            checkAsus.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
            buscarFiltros();
        }
    }//GEN-LAST:event_checkAsusItemStateChanged

    private void checkDellItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkDellItemStateChanged
        if (checkDell.isSelected()) 
        {
            checkDell.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "check.png"));
            buscarFiltros();
        } else 
        {
            checkDell.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
            buscarFiltros();
        }
    }//GEN-LAST:event_checkDellItemStateChanged

    private void checkLenovoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkLenovoItemStateChanged
        if (checkLenovo.isSelected()) 
        {
            checkLenovo.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "check.png"));
            buscarFiltros();
        } else 
        {
            checkLenovo.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
            buscarFiltros();
        }
    }//GEN-LAST:event_checkLenovoItemStateChanged

    private void checkMsiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkMsiItemStateChanged
        if (checkMsi.isSelected()) 
        {
            checkMsi.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "check.png"));
            buscarFiltros();
        } else 
        {
            checkMsi.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
            buscarFiltros();
        }
    }//GEN-LAST:event_checkMsiItemStateChanged

    private void checkRazerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkRazerItemStateChanged
        if (checkRazer.isSelected()) 
        {
            checkRazer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "check.png"));
            buscarFiltros();
        } else 
        {
            checkRazer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
            buscarFiltros();
        }
    }//GEN-LAST:event_checkRazerItemStateChanged

    public void buscarFiltros() {
        InterfazMostrarProductos.getInstancia().panelProductos = null;
        InterfazMostrarProductos.getInstancia().panelProductos = new JPanel(new GridLayout(0,3, 20,38));
        InterfazMostrarProductos.getInstancia().panelProductos.setBackground(Color.WHITE);
        InterfazMostrarProductos.getInstancia().scrollPane.setViewportView(InterfazMostrarProductos.getInstancia().panelProductos);
        try {
                // Establecer la conexión a la base de datos
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcworld", "pcworld", "pcworld2024");

                // Recopilar los nombres de las marcas seleccionadas
                ArrayList<String> marcasSeleccionadas = new ArrayList<>();
                if (checkAcer.isSelected()) 
                    marcasSeleccionadas.add("Acer");
                if (checkAlurin.isSelected()) 
                    marcasSeleccionadas.add("Alurin");
                if (checkAsus.isSelected()) 
                    marcasSeleccionadas.add("Asus");
                if (checkDell.isSelected()) 
                    marcasSeleccionadas.add("Dell");
                if (checkLenovo.isSelected()) 
                    marcasSeleccionadas.add("Lenovo");
                if (checkMsi.isSelected()) 
                    marcasSeleccionadas.add("MSI");
                if (checkRazer.isSelected()) 
                    marcasSeleccionadas.add("Razer");
                if(marcasSeleccionadas.isEmpty())
                {
                    InterfazMostrarProductos.getInstancia().cargarProductosDesdeBD();
                }
                else
                {
                    // Construir la consulta SQL dinámica
                    StringBuilder consulta = new StringBuilder("SELECT * FROM productos WHERE tipoProducto = 'Portatil' AND (");
                    for (int i = 0; i < marcasSeleccionadas.size(); i++) {
                        consulta.append("IdNombre LIKE ?");
                        if (i < marcasSeleccionadas.size() - 1) {
                            consulta.append(" OR ");
                        }
                    }
                    if(InterfazMostrarProductos.getInstancia().checkAscendente.isSelected())
                    {
                        consulta.append(") ORDER BY precioProducto ASC");
                    }else if(InterfazMostrarProductos.getInstancia().checkDescendente.isSelected())
                    {
                        consulta.append(") ORDER BY precioProducto DESC");
                    }else
                    {
                        consulta.append(")");
                    }
                    // Preparar la consulta
                    PreparedStatement pstmt = cn.prepareStatement(consulta.toString());

                    // Establecer los parámetros de la consulta
                    for (int i = 0; i < marcasSeleccionadas.size(); i++) {
                        pstmt.setString(i + 1, "%" + marcasSeleccionadas.get(i) + "%");
                    }

                    // Ejecutar la consulta
                    ResultSet rs = pstmt.executeQuery();

                    // Procesar los resultados
                    while (rs.next())
                    {
                        cargarProductosDesdeBD(rs.getString("IdNombre"));
                    }            
                }
                cn.close();
                
            } catch(Exception e) {
                System.out.println("Error: " + e);
            }
        InterfazMostrarProductos.getInstancia().scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        InterfazMostrarProductos.getInstancia().scrollPane.setViewportView(InterfazMostrarProductos.getInstancia().panelProductos);
        InterfazMostrarProductos.getInstancia().panelPrincipal.requestFocusInWindow();
        // Obtener la vista del JViewport
        JViewport viewport = InterfazMostrarProductos.getInstancia().scrollPane.getViewport();

        // Establecer la posición de la vista en la parte superior
        SwingUtilities.invokeLater(() -> {
            viewport.setViewPosition(new Point(0, 0));
        });
    }
    
    public void cargarProductosDesdeBD(String nombre)
    {
        try {
            String rutaImagenPortada = "Imagenes" + File.separator + "Portada" + File.separator;
            Connection cn = InterfazMostrarProductos.getInstancia().conectarBD();

            ResultSet rsProducto;
            rsProducto = InterfazMostrarProductos.getInstancia().cargarProductosSegunFiltroMarca(cn, nombre);

            while (rsProducto.next())
            {
                Producto producto = InterfazMostrarProductos.getInstancia().crearProductoDesdeResultSet(rsProducto, rutaImagenPortada);
                InterfazMostrarProductos.getInstancia().actualizarValoresSliders((int) producto.getPrecio());
                InterfazMostrarProductos.getInstancia().crearPanelYActualizarInterfaz(producto);
            }

            cn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        } 
    }
    
    private void logoAcerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoAcerMouseClicked

        checkAcer.setSelected(!checkAcer.isSelected());
        checkAcerItemStateChanged(new ItemEvent(checkAcer, ItemEvent.SELECTED, checkAcer, ItemEvent.SELECTED));
    }//GEN-LAST:event_logoAcerMouseClicked

    private void logoAlurinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoAlurinMouseClicked
        checkAlurin.setSelected(!checkAlurin.isSelected());
        checkAlurinItemStateChanged(new ItemEvent(checkAlurin, ItemEvent.SELECTED, checkAlurin, ItemEvent.SELECTED));
    }//GEN-LAST:event_logoAlurinMouseClicked

    private void logoAsusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoAsusMouseClicked
        checkAsus.setSelected(!checkAsus.isSelected());
        checkAlurinItemStateChanged(new ItemEvent(checkAsus, ItemEvent.SELECTED, checkAsus, ItemEvent.SELECTED));
    }//GEN-LAST:event_logoAsusMouseClicked

    private void logoDellMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoDellMouseClicked
        checkDell.setSelected(!checkDell.isSelected());
        checkAlurinItemStateChanged(new ItemEvent(checkDell, ItemEvent.SELECTED, checkDell, ItemEvent.SELECTED));
    }//GEN-LAST:event_logoDellMouseClicked

    private void logoLenovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoLenovoMouseClicked
        checkLenovo.setSelected(!checkLenovo.isSelected());
        checkAlurinItemStateChanged(new ItemEvent(checkLenovo, ItemEvent.SELECTED, checkLenovo, ItemEvent.SELECTED));
    }//GEN-LAST:event_logoLenovoMouseClicked

    private void logoMsiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoMsiMouseClicked
        checkMsi.setSelected(!checkMsi.isSelected());
        checkAlurinItemStateChanged(new ItemEvent(checkMsi, ItemEvent.SELECTED, checkMsi, ItemEvent.SELECTED));
    }//GEN-LAST:event_logoMsiMouseClicked

    private void logoRazerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoRazerMouseClicked
        checkRazer.setSelected(!checkRazer.isSelected());
        checkAlurinItemStateChanged(new ItemEvent(checkRazer, ItemEvent.SELECTED, checkRazer, ItemEvent.SELECTED));
    }//GEN-LAST:event_logoRazerMouseClicked

    private void checkAcerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkAcerItemStateChanged
        if (checkAcer.isSelected())
        {
            checkAcer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "check.png"));
            buscarFiltros();
        } else
        {
            checkAcer.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "square.png"));
            buscarFiltros();
        }
    }//GEN-LAST:event_checkAcerItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox checkAcer;
    public javax.swing.JCheckBox checkAlurin;
    public javax.swing.JCheckBox checkAsus;
    public javax.swing.JCheckBox checkDell;
    public javax.swing.JCheckBox checkLenovo;
    public javax.swing.JCheckBox checkMsi;
    public javax.swing.JCheckBox checkRazer;
    private javax.swing.JLabel logoAcer;
    private javax.swing.JLabel logoAlurin;
    private javax.swing.JLabel logoAsus;
    private javax.swing.JLabel logoDell;
    private javax.swing.JLabel logoLenovo;
    private javax.swing.JLabel logoMsi;
    private javax.swing.JLabel logoRazer;
    public javax.swing.JPanel panelPrincipal;
    // End of variables declaration//GEN-END:variables
    private static InterfazPanelFiltrosPortatiles instancia;
}
