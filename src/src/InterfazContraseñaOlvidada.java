package src;

import java.sql.*;

public class InterfazContraseñaOlvidada extends javax.swing.JFrame 
{
    /**
     * Creates new form InterfazContraseñaOlvidada
     */
    public InterfazContraseñaOlvidada() {
        initComponents();
        panelPrincipal.requestFocusInWindow();
    }
    
    public void setCódigoSeguridad(String _códigoSeguridad)
    {
        this.códigoSeguridad = _códigoSeguridad;
    }
    
    public String getCódigoSeguridad()
    {
        return códigoSeguridad;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        campoCodigo = new javax.swing.JTextField();
        campoNContraseña = new javax.swing.JTextField();
        campoCContraseña = new javax.swing.JTextField();
        labelTitulo = new javax.swing.JLabel();
        labelCodigo = new javax.swing.JLabel();
        labelNContraseña = new javax.swing.JLabel();
        labelErrorCodigo = new javax.swing.JLabel();
        botonCambioContraseña = new javax.swing.JButton();
        labelConfirmarNContraseña = new javax.swing.JLabel();
        labelErrorContraseña = new javax.swing.JLabel();
        labelErrorConfirmarNContraseña = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setForeground(new java.awt.Color(255, 0, 0));
        panelPrincipal.setPreferredSize(new java.awt.Dimension(400, 460));
        panelPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClickedPanelActionEvent(evt);
            }
        });

        campoCodigo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campoCodigo.setForeground(new java.awt.Color(153, 153, 153));
        campoCodigo.setText("Código*");
        campoCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focusGainedCodigoActionEvent(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostCodigoActionEvent(evt);
            }
        });

        campoNContraseña.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campoNContraseña.setForeground(new java.awt.Color(153, 153, 153));
        campoNContraseña.setText("Contraseña nueva*");
        campoNContraseña.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focusGainedContraseñaNuevaActionEvent(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostContraseñaNuevaActionEvent(evt);
            }
        });
        campoNContraseña.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoNContraseñaKeyReleased(evt);
            }
        });

        campoCContraseña.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        campoCContraseña.setForeground(new java.awt.Color(153, 153, 153));
        campoCContraseña.setText("Confirmar contraseña*");
        campoCContraseña.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focusGainedConfirmarContraseñaActionEvent(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostConfirmarContraseñaActionEvent(evt);
            }
        });
        campoCContraseña.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoCContraseñaKeyReleased(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        labelTitulo.setText("Cambio de contraseña");

        labelCodigo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelCodigo.setText("Código");

        labelNContraseña.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelNContraseña.setText("Nueva contraseña");

        labelErrorCodigo.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
        labelErrorCodigo.setForeground(new java.awt.Color(255, 0, 0));
        labelErrorCodigo.setText("                            ");

        botonCambioContraseña.setText("Cambiar contraseña");
        botonCambioContraseña.setFocusPainted(false);
        botonCambioContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambioContraseñaActionPerformed(evt);
            }
        });

        labelConfirmarNContraseña.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelConfirmarNContraseña.setText("Confirmar nueva contraseña");

        labelErrorContraseña.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
        labelErrorContraseña.setForeground(new java.awt.Color(255, 0, 0));
        labelErrorContraseña.setText("                            ");

        labelErrorConfirmarNContraseña.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
        labelErrorConfirmarNContraseña.setForeground(new java.awt.Color(255, 0, 0));
        labelErrorConfirmarNContraseña.setText("                            ");

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(labelTitulo)
                .addContainerGap(102, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGap(0, 90, Short.MAX_VALUE)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonCambioContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelConfirmarNContraseña)
                    .addComponent(labelNContraseña)
                    .addComponent(campoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodigo)
                    .addComponent(campoCContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoNContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelErrorCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                    .addComponent(labelErrorContraseña, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelErrorConfirmarNContraseña, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(labelTitulo)
                .addGap(21, 21, 21)
                .addComponent(labelCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorCodigo)
                .addGap(10, 10, 10)
                .addComponent(labelNContraseña)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoNContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorContraseña)
                .addGap(10, 10, 10)
                .addComponent(labelConfirmarNContraseña)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoCContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelErrorConfirmarNContraseña)
                .addGap(20, 20, 20)
                .addComponent(botonCambioContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botonCambioContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambioContraseñaActionPerformed
       if(!campoCodigo.getText().equals(EnviarCorreo.getInstancia().getNumeroAleatorio()))
           labelErrorCodigo.setText("El código de seguridad no es correcto");
       else if(campoCodigo.getText().equals("Código*"))
           labelErrorCodigo.setText("El campo esta vacío");
       else
           labelErrorCodigo.setText("                                                   ");
       
       if(campoNContraseña.getText().equals("Contraseña nueva*"))
           labelErrorContraseña.setText("Rellena la contraseña");
       
       if(campoCContraseña.getText().equals("Confirmar contraseña*"))
           labelErrorConfirmarNContraseña.setText("El campo está vacío");
       
       // Verificar si no hay errores en los campos
        if(labelErrorCodigo.getText().equals("                                                   ") && labelErrorContraseña.getText().equals("                                                   ") && labelErrorConfirmarNContraseña.getText().equals("                                                   "))
        {
            try {
                // Establecer la conexión a la base de datos
                Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcworld", "pcworld", "pcworld2024");

                // Verificar si el correo electrónico ya existe en la tabla
                String queryCorreo = "SELECT * FROM datos_clientes WHERE `E-mail` = ?";
                PreparedStatement pstmtCorreo = cn.prepareStatement(queryCorreo);
                pstmtCorreo.setString(1, InterfazConfirmarCorreo.getInstancia().getCorreo());
                ResultSet rsCorreo = pstmtCorreo.executeQuery();

                if (rsCorreo.next()) {
                    // El correo electrónico existe en la base de datos
                    String contraseñaDB = rsCorreo.getString("Contraseña");
                    String contraseñaUsuario = campoNContraseña.getText().trim();

                    if (contraseñaDB.equals(contraseñaUsuario)) {
                        // La contraseña coincide
                        labelErrorContraseña.setText("La contraseña no puede ser igual a la anterior");
                    } 
                    else {
                        // La contraseña no coincide
                        PreparedStatement pstmtInsertar = cn.prepareStatement("UPDATE datos_clientes SET Contraseña = ? WHERE `E-mail` = ?");
                        pstmtInsertar.setString(1, campoNContraseña.getText().trim()); // Establece la nueva contraseña
                        pstmtInsertar.setString(2, InterfazConfirmarCorreo.getInstancia().getCorreo()); // Usa el correo electrónico para identificar el registro
                        pstmtInsertar.executeUpdate();
                        this.dispose();
                    }
                }
            } catch(Exception e) {
                System.out.println("Error: " + e);
            }
        }
    }//GEN-LAST:event_botonCambioContraseñaActionPerformed

    private void focusLostCodigoActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusLostCodigoActionEvent
        if(campoCodigo.getText().equals(""))
        {
            campoCodigo.setText("Código*");
        }
    }//GEN-LAST:event_focusLostCodigoActionEvent

    private void focusGainedCodigoActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedCodigoActionEvent
        
        if(campoCodigo.getText().equals("Código*"))
        {
            campoCodigo.setText("");
        }
    }//GEN-LAST:event_focusGainedCodigoActionEvent

    private void focusLostContraseñaNuevaActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusLostContraseñaNuevaActionEvent
        if(campoNContraseña.getText().equals(""))
        {
            campoNContraseña.setText("Contraseña nueva*");
        }
    }//GEN-LAST:event_focusLostContraseñaNuevaActionEvent

    private void focusGainedContraseñaNuevaActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedContraseñaNuevaActionEvent
        if(campoNContraseña.getText().equals("Contraseña nueva*"))
        {
            campoNContraseña.setText("");
        }
    }//GEN-LAST:event_focusGainedContraseñaNuevaActionEvent

    private void focusLostConfirmarContraseñaActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusLostConfirmarContraseñaActionEvent
        if(campoCContraseña.getText().equals(""))
        {
            campoCContraseña.setText("Confirmar contraseña*");
        }
    }//GEN-LAST:event_focusLostConfirmarContraseñaActionEvent

    private void focusGainedConfirmarContraseñaActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedConfirmarContraseñaActionEvent
        if(campoCContraseña.getText().equals("Confirmar contraseña*"))
        {
            campoCContraseña.setText("");
        }
    }//GEN-LAST:event_focusGainedConfirmarContraseñaActionEvent

    private void mouseClickedPanelActionEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClickedPanelActionEvent
        panelPrincipal.requestFocusInWindow();
    }//GEN-LAST:event_mouseClickedPanelActionEvent

    private void campoNContraseñaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoNContraseñaKeyReleased
        if(campoNContraseña.getText().matches("^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).{8,}$"))
        {
            labelErrorContraseña.setText("                                                   ");
        }else if(!campoNContraseña.getText().matches("^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).{8,}$"))
        {
            labelErrorContraseña.setText("Debe tener minimo 8 caracteres, 1 num, 1 may y 1 car.especial");
        }
    }//GEN-LAST:event_campoNContraseñaKeyReleased

    private void campoCContraseñaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoCContraseñaKeyReleased
        if(!campoCContraseña.getText().equals(campoNContraseña.getText()))
        {
           labelErrorConfirmarNContraseña.setText("La contraseña no coinciden");
        }
        else
            labelErrorConfirmarNContraseña.setText("                                                   ");
    }//GEN-LAST:event_campoCContraseñaKeyReleased

    private String códigoSeguridad;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCambioContraseña;
    private javax.swing.JTextField campoCContraseña;
    private javax.swing.JTextField campoCodigo;
    private javax.swing.JTextField campoNContraseña;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelConfirmarNContraseña;
    private javax.swing.JLabel labelErrorCodigo;
    private javax.swing.JLabel labelErrorConfirmarNContraseña;
    private javax.swing.JLabel labelErrorContraseña;
    private javax.swing.JLabel labelNContraseña;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JPanel panelPrincipal;
    // End of variables declaration//GEN-END:variables
}
