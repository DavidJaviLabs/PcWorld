package src;

import java.io.*;
import java.sql.*;


public class InterfazConfirmarCorreo extends javax.swing.JFrame {

    private static InterfazConfirmarCorreo instancia;
    private String correo;
    /**
     * Creates new form InterfazConfirmarCorreo
     */
    public InterfazConfirmarCorreo() {
        initComponents();   
        panelGeneral.requestFocusInWindow();
        setVisible(true);
    }
    
    public String getCorreo() 
    {
        return this.correo;
    }
    
    public static InterfazConfirmarCorreo getInstancia()
    {
        if(instancia == null)
        {
            instancia = new InterfazConfirmarCorreo();
        }
        return instancia;
    }
    
    public static InterfazConfirmarCorreo crearNuevaInstancia() 
    {
        instancia = null;
        return getInstancia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGeneral = new javax.swing.JPanel();
        recuperarContraseña = new javax.swing.JButton();
        campoEmail = new javax.swing.JTextField();
        emaillabel = new javax.swing.JLabel();
        recuperarContraseñaLabel = new javax.swing.JLabel();
        captcha = new javax.swing.JCheckBox();
        panelCaptcha = new javax.swing.JPanel();
        labelCaptcha = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelErrorEmail = new javax.swing.JLabel();
        labelIniciarSesion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panelGeneral.setBackground(new java.awt.Color(255, 255, 255));
        panelGeneral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClickedPanelActionEvent(evt);
            }
        });

        recuperarContraseña.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        recuperarContraseña.setText("Recuperar contraseña");
        recuperarContraseña.setEnabled(false);
        recuperarContraseña.setFocusPainted(false);
        recuperarContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recuperarContraseñaActionPerformed(evt);
            }
        });

        campoEmail.setForeground(new java.awt.Color(153, 153, 153));
        campoEmail.setText("E-mail*");
        campoEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focusGainedEmailTextFieldActionEvent(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                focusLostEmailTextFieldActionEvent(evt);
            }
        });
        campoEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                campoEmailKeyReleased(evt);
            }
        });

        emaillabel.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        emaillabel.setText("E-mail");

        recuperarContraseñaLabel.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        recuperarContraseñaLabel.setText("Recuperar contraseña");
        recuperarContraseñaLabel.setVerifyInputWhenFocusTarget(false);

        captcha.setBackground(new java.awt.Color(204, 204, 204));
        captcha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        captcha.setForeground(new java.awt.Color(0, 0, 0));
        captcha.setText("I'm not a robot");
        captcha.setFocusPainted(false);
        captcha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                captchaMouseReleased(evt);
            }
        });
        captcha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captchaActionPerformed(evt);
            }
        });

        panelCaptcha.setBackground(new java.awt.Color(204, 204, 204));
        panelCaptcha.setForeground(new java.awt.Color(204, 204, 204));

        labelCaptcha.setBackground(new java.awt.Color(0, 0, 0));
        labelCaptcha.setForeground(new java.awt.Color(0, 0, 0));
        labelCaptcha.setIcon(new javax.swing.ImageIcon("ImagenesDecoracion" + File.separator + "logo_captcha.png"));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 8)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("reCAPTCHA");

        javax.swing.GroupLayout panelCaptchaLayout = new javax.swing.GroupLayout(panelCaptcha);
        panelCaptcha.setLayout(panelCaptchaLayout);
        panelCaptchaLayout.setHorizontalGroup(
            panelCaptchaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCaptchaLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(panelCaptchaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(labelCaptcha))
                .addContainerGap())
        );
        panelCaptchaLayout.setVerticalGroup(
            panelCaptchaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCaptchaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCaptcha)
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        labelErrorEmail.setFont(new java.awt.Font("Arial", 0, 9)); // NOI18N
        labelErrorEmail.setForeground(new java.awt.Color(255, 0, 0));
        labelErrorEmail.setText("                          ");

        labelIniciarSesion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        labelIniciarSesion.setForeground(new java.awt.Color(0, 0, 0));
        labelIniciarSesion.setText("Volver para iniciar sesión");
        labelIniciarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelIniciarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGeneralLayout = new javax.swing.GroupLayout(panelGeneral);
        panelGeneral.setLayout(panelGeneralLayout);
        panelGeneralLayout.setHorizontalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGeneralLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(recuperarContraseñaLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelGeneralLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(recuperarContraseña, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(emaillabel)
                        .addComponent(campoEmail)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGeneralLayout.createSequentialGroup()
                            .addComponent(captcha, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(panelCaptcha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(labelErrorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(panelGeneralLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(labelIniciarSesion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelGeneralLayout.setVerticalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGeneralLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(recuperarContraseñaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emaillabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(labelErrorEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelCaptcha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(captcha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addComponent(recuperarContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(labelIniciarSesion)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void recuperarContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recuperarContraseñaActionPerformed
        labelErrorEmail.setText("                                                   ");

        try {
            // Establecer la conexión a la base de datos
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcworld", "pcworld", "pcworld2024");

            // Verificar si el correo electrónico ya existe en la tabla
            String queryCorreo = "SELECT * FROM datos_clientes WHERE `E-mail` = ?";
            PreparedStatement pstmtCorreo = cn.prepareStatement(queryCorreo);
            pstmtCorreo.setString(1, campoEmail.getText().trim());
            ResultSet rsCorreo = pstmtCorreo.executeQuery();
            boolean correoEncontrado = rsCorreo.next();
            if (correoEncontrado && InterfazPrincipal.getInstancia().botonCuenta.getText().equals("Cuenta")) 
            {
                // El correo electrónico existe en la base de datos
                EnviarCorreo.crearNuevaInstancia();
                InterfazPrincipal.getInstancia().setUser(rsCorreo.getString("Usuario"));
                EnviarCorreo.getInstancia().transfer_to_email(campoEmail.getText());
                new InterfazContraseñaOlvidada().setVisible(true);
                this.dispose();
            }
            else if(correoEncontrado && !InterfazPrincipal.getInstancia().botonCuenta.getText().equals("Cuenta"))
            {
                if(campoEmail.getText().trim().equals(InterfazPrincipal.getInstancia().correo))
                {
                    // El correo electrónico existe en la base de datos y coincide con el de la sesion iniciada
                    EnviarCorreo.crearNuevaInstancia();
                    EnviarCorreo.getInstancia().transfer_to_email(campoEmail.getText());
                    new InterfazContraseñaOlvidada().setVisible(true);
                    this.dispose();
                }
                else
                {
                    labelErrorEmail.setText("El correo no coincide con el de la sesión iniciada");
                }
            }
        } catch(Exception e) {
            System.out.println("Error: " + e);
        }           
    }//GEN-LAST:event_recuperarContraseñaActionPerformed

    private void captchaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captchaActionPerformed
        
        if(captcha.isSelected()) 
        {
            captcha.setEnabled(false);
        } 
        else 
        {
            recuperarContraseña.setEnabled(false); // Bloquear el botón
        }
    }//GEN-LAST:event_captchaActionPerformed

    private void focusLostEmailTextFieldActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusLostEmailTextFieldActionEvent
        if(campoEmail.getText().equals(""))
        {
            campoEmail.setText("E-mail*");
            labelErrorEmail.setText("                                                   ");
            recuperarContraseña.setEnabled(false); // Bloquear el botón
        }
    }//GEN-LAST:event_focusLostEmailTextFieldActionEvent

    private void focusGainedEmailTextFieldActionEvent(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedEmailTextFieldActionEvent
        if(campoEmail.getText().equals("E-mail*"))
        {
            campoEmail.setText("");
        }
    }//GEN-LAST:event_focusGainedEmailTextFieldActionEvent

    private void labelIniciarSesionActionPerformed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelIniciarSesionActionPerformed
        new InterfazLogin().setVisible(true);
        this.dispose();        
    }//GEN-LAST:event_labelIniciarSesionActionPerformed

    private void mouseClickedPanelActionEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClickedPanelActionEvent
        panelGeneral.requestFocusInWindow();
    }//GEN-LAST:event_mouseClickedPanelActionEvent

    private void campoEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoEmailKeyReleased
        try 
        {
            // Establecer la conexión a la base de datos
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/pcworld", "pcworld", "pcworld2024");

            // Verificar si el correo electrónico ya existe en la tabla
            String queryCorreo = "SELECT * FROM datos_clientes WHERE `E-mail` = ?";
            PreparedStatement pstmtCorreo = cn.prepareStatement(queryCorreo);
            pstmtCorreo.setString(1, campoEmail.getText().trim());
            ResultSet rsCorreo = pstmtCorreo.executeQuery();
            
            if (rsCorreo.next()) 
            {
                labelErrorEmail.setText("                                                   ");
                // El correo electrónico existe en la base de datos
                correo = campoEmail.getText().trim();
                if(captcha.isSelected())
                    recuperarContraseña.setEnabled(true); // Desbloquear el botón
            } 
            else 
            {
                recuperarContraseña.setEnabled(false); // Bloquear el botón
                // El correo electrónico no existe en la base de datos
                if(!campoEmail.getText().matches("^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$"))
                {
                    labelErrorEmail.setText("El correo electrónico está mal escrito");
                }
                else{
                    labelErrorEmail.setText("El correo electrónico no está registrado");
                }
            }
            if(campoEmail.getText().equals("E-mail*"))
                labelErrorEmail.setText("Rellena el E-mail");

        } catch(Exception e) {
            System.out.println("Error: " + e);
        }
    }//GEN-LAST:event_campoEmailKeyReleased

    private void captchaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_captchaMouseReleased
        if(labelErrorEmail.getText().equals("                                                   ") && !campoEmail.getText().equals("E-mail*"))  
            recuperarContraseña.setEnabled(true); // Desbloquear el botón
    }//GEN-LAST:event_captchaMouseReleased

    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoEmail;
    private javax.swing.JCheckBox captcha;
    private javax.swing.JLabel emaillabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel labelCaptcha;
    private javax.swing.JLabel labelErrorEmail;
    private javax.swing.JLabel labelIniciarSesion;
    private javax.swing.JPanel panelCaptcha;
    private javax.swing.JPanel panelGeneral;
    private javax.swing.JButton recuperarContraseña;
    private javax.swing.JLabel recuperarContraseñaLabel;
    // End of variables declaration//GEN-END:variables
}
